{"version":3,"sources":["bg.webp","bg.jpg","data.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","getData","tcb","init","env","database","collection","where","publishInfo","country","get","then","res","console","log","App","_useState","useState","_useState2","Object","slicedToArray","date","setDate","useEffect","_getDate","asyncToGenerator","regenerator_default","a","mark","_callee","newDate","wrap","_context","prev","next","fetch","sent","text","stop","apply","this","arguments","getDate","react_default","createElement","href","target","rel","srcSet","type","src","alt","_ref","fallback","_ref$type","delegated","objectWithoutProperties","assign","require","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","publicUrl","URL","process","origin","addEventListener","concat","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","e","test","request","url","supportsWebp","has","includes","req","clone","returnUrl","substr","lastIndexOf","respondWith","mode"],"mappings":"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","file":"static/js/main.c08edd1e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.47c17fd1.webp\";","module.exports = __webpack_public_path__ + \"static/media/bg.5affc753.jpg\";","import tcb from \"tcb-js-sdk\";\r\n\r\nexport const getData = () => {\r\n  const app = tcb.init({\r\n    env: \"demo-ffe40\",\r\n  });\r\n  // 1. 获取数据库引用\r\n  var db = app.database();\r\n  // 2. 构造查询语句\r\n  // collection() 方法获取一个集合的引用\r\n  // where() 方法传入一个 query 对象，数据库返回集合中字段等于指定值的 JSON 文档。\r\n  // get() 方法会触发网络请求，往数据库取数据\r\n  db.collection(\"books\")\r\n    .where({\r\n      publishInfo: {\r\n        country: \"United States\",\r\n      },\r\n    })\r\n    .get()\r\n    .then(function(res) {\r\n      console.log(res);\r\n      // 输出 [{ \"title\": \"The Catcher in the Rye\", ... }]\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { getData } from \"./data\";\r\n\r\nfunction App() {\r\n  const [date, setDate] = useState(null);\r\n  getData();\r\n  useEffect(() => {\r\n    async function getDate() {\r\n      const res = await fetch(\"/api/date\");\r\n      const newDate = await res.text();\r\n      setDate(newDate);\r\n    }\r\n    getDate();\r\n  }, []);\r\n  const ImgWithFallback = ({\r\n    src,\r\n    fallback,\r\n    type = \"image/webp\",\r\n    ...delegated\r\n  }) => {\r\n    return (\r\n      <picture>\r\n        <source srcSet={src} type={type} />\r\n        <img src={fallback} alt=\"test\" {...delegated} />\r\n      </picture>\r\n    );\r\n  };\r\n  return (\r\n    <main>\r\n      <h1>Create React App + Go API</h1>\r\n      <h2>\r\n        Deployed with{\" \"}\r\n        <a\r\n          href=\"https://vercel.com/docs\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer noopener\"\r\n        >\r\n          Vercel\r\n        </a>\r\n        !\r\n      </h2>\r\n      <picture>\r\n        <source srcSet=\"./yoyo.jpg\" type=\"image/jpeg\" />\r\n        <img src=\"./yoyo.jpg\" alt=\"Brooklyn Bridge - New York\"></img>\r\n      </picture>\r\n      <ImgWithFallback\r\n        src={require(\"./bg.webp\")}\r\n        fallback={require(\"./bg.jpg\")}\r\n        alt=\"test\"\r\n      />\r\n      <p>\r\n        <a\r\n          href=\"https://github.com/zeit/now/tree/master/examples/create-react-app\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer noopener\"\r\n        >\r\n          This project\r\n        </a>{\" \"}\r\n        was bootstrapped with{\" \"}\r\n        <a href=\"https://facebook.github.io/create-react-app/\">\r\n          Create React App\r\n        </a>{\" \"}\r\n        and contains three directories, <code>/public</code> for static assets,{\" \"}\r\n        <code>/src</code> for components and content, and <code>/api</code>{\" \"}\r\n        which contains a serverless <a href=\"https://golang.org/\">Go</a>{\" \"}\r\n        function. See{\" \"}\r\n        <a href=\"/api/date\">\r\n          <code>api/date</code> for the Date API with Go\r\n        </a>\r\n        .\r\n      </p>\r\n      <br />\r\n      <h2>The date according to Go is:</h2>\r\n      <p>{date ? date : \"Loading date...\"}</p>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    console.log(publicUrl);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n\r\n    window.addEventListener(\"fetch\", (e) => {\r\n      // Check if the image is a jpeg\r\n      if (/\\.jpg$|.png$/.test(e.request.url)) {\r\n        let supportsWebp = false;\r\n        if (e.request.headers.has(\"accept\")) {\r\n          supportsWebp = e.request.headers.get(\"accept\").includes(\"webp\");\r\n        }\r\n        // If we support WebP\r\n        if (supportsWebp) {\r\n          // Clone the request\r\n          const req = e.request.clone();\r\n          // Build the return URL\r\n          const returnUrl =\r\n            req.url.substr(0, req.url.lastIndexOf(\".\")) + \".webp\";\r\n          e.respondWith(\r\n            fetch(returnUrl, {\r\n              mode: \"no-cors\",\r\n            })\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}